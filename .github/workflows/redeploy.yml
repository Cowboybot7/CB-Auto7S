name: 24/7 Monitor & Redeploy

on:
  schedule:
    - cron: '*/5 * * * *'  # Every minute

jobs:
  ensure-availability:
    runs-on: ubuntu-latest
    steps:
      - name: Record Start Time
        id: start
        run: echo "start_time=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Keep Alive & Health Check
        id: health-check
        run: |
          echo "[$(date)] Starting keep-alive loop..."

          for i in {1..10}; do
            curl -s https://cb-auto7s.onrender.com/healthz > /dev/null
            echo "[$(date)] Ping $i completed."
            sleep 10
          done

          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" https://cb-auto7s.onrender.com/healthz)
          echo "[$(date)] Final HTTP status: $RESPONSE"

          if [ "$RESPONSE" -ne 200 ]; then
            echo "status=unhealthy" >> $GITHUB_OUTPUT
          else
            echo "status=healthy" >> $GITHUB_OUTPUT
          fi

      - name: Redeploy if Unhealthy
        if: steps.health-check.outputs.status == 'unhealthy'
        run: |
          echo "[$(date)] Service is unhealthy. Triggering redeploy..."
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            "https://api.render.com/v1/services/web/${{ secrets.RENDER_SERVICE_ID }}/deploys"

      - name: Notify Telegram
        if: always()
        run: |
          STATUS="${{ job.status }}"
          EMOJI="‚úÖ"
          if [ "$STATUS" != "success" ]; then EMOJI="‚ùå"; fi

          TIMESTAMP=$(TZ="Asia/Phnom_Penh" date '+%a %b %d %T %Z %Y')
          END_TIME=$(date +%s)
          START_TIME=${{ steps.start.outputs.start_time }}
          DURATION=$((END_TIME - START_TIME))

          MESSAGE=$(printf "%s *CB-Auto7S Deployment Status*\n\n‚è± *Time:* %s\n‚è≥ *Duration:* %ds\nüö¶ *Status:* %s" \
            "$EMOJI" "$TIMESTAMP" "$DURATION" "$STATUS")

          curl -s -X POST \
            "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d "chat_id=${{ secrets.AUTHORIZED_USERS }}" \
            -d "text=$MESSAGE" \
            -d "parse_mode=Markdown"

          # Optional: Send link to GitHub Actions run
          RUN_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          curl -s -X POST \
            "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d "chat_id=${{ secrets.AUTHORIZED_USERS }}" \
            -d "text=üîó [View Logs on GitHub]($RUN_URL)" \
            -d "parse_mode=Markdown"
